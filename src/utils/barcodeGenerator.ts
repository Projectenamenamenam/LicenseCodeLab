// Format to generate AAMVA compliant data
export function generateAAMVAData(state: string, formData: any, iinCode: string) {
  // Start with header
  let data = '@';
  data += 'ANSI ';
  data += iinCode;
  data += 'DL';
  data += '08'; // Format version 8.0
  data += '00'; // Jurisdiction version
  data += '01'; // Number of subfiles - always 1 for now

  // Add required data elements for the selected state
  // Customer ID (DL Number)
  data += 'DAQ' + formData.dlNumber;
  
  // Name fields
  data += 'DCS' + formData.lastName;
  data += 'DAC' + formData.firstName;
  if (formData.middleName) {
    data += 'DAD' + formData.middleName;
  }
  
  // Birth date (MMDDYYYY)
  data += 'DBB' + formData.birthDate;
  
  // Sex (1=male, 2=female)
  data += 'DBC' + (formData.sex === 'Male' ? '1' : '2');
  
  // Eye and hair color
  data += 'DAY' + formData.eyeColorDL;
  data += 'DAZ' + formData.hairColorDL;
  
  // Address
  data += 'DAG' + formData.address;
  data += 'DAI' + formData.city;
  data += 'DAJ' + state.substring(0, 2); // First two letters of state
  data += 'DAK' + formData.zipCode;
  
  // License dates
  data += 'DBA' + formData.expiryDate; // Expiration date
  data += 'DBD' + formData.issueDate; // Issue date
  
  // Issuing jurisdiction
  data += 'DBJ' + state.substring(0, 2); // First two letters of state
  
  // License class
  data += 'DCA' + formData.dlClass;
  
  // Restrictions and endorsements
  if (formData.restrictions) {
    data += 'DCB' + formData.restrictions;
  }
  if (formData.endorsement) {
    data += 'DCD' + formData.endorsement;
  }
  
  // Height (in inches)
  data += 'DAU' + formData.height;
  
  // Weight (in pounds)
  data += 'DCE' + formData.weight;
  
  // Document discriminator
  if (formData.dd) {
    data += 'DCF' + formData.dd;
  }
  
  // Inventory control number
  if (formData.icn) {
    data += 'DCG' + formData.icn;
  }
  
  return data;
}

// Function to generate a downloadable PDF file with license information
export function generatePDF(data: string, formData: any, state: string): string {
  const html = `
    <!DOCTYPE html>
    <html>
      <head>
        <title>AAMVA Driver License Data - ${state}</title>
        <style>
          body { font-family: Arial, sans-serif; margin: 40px; }
          .info-table { width: 100%; border-collapse: collapse; margin-top: 20px; }
          .info-table th, .info-table td { border: 1px solid #ddd; padding: 8px; text-align: left; }
          .info-table th { background-color: #f2f2f2; }
          h1 { text-align: center; }
          .generated-by { text-align: center; font-size: 12px; color: #666; margin-top: 30px; }
          .aamva-data { 
            font-family: monospace; 
            background: #f5f5f5; 
            padding: 15px; 
            margin: 20px 0; 
            word-break: break-all; 
          }
        </style>
      </head>
      <body>
        <h1>AAMVA Driver License Data</h1>
        <div class="aamva-data">
          ${data}
        </div>
        <table class="info-table">
          <tr>
            <th>State</th>
            <td>${state}</td>
          </tr>
          <tr>
            <th>DL Number</th>
            <td>${formData.dlNumber}</td>
          </tr>
          <tr>
            <th>Full Name</th>
            <td>${formData.lastName}, ${formData.firstName} ${formData.middleName || ''}</td>
          </tr>
          <tr>
            <th>Birth Date</th>
            <td>${formData.birthDate.substring(0, 2)}/${formData.birthDate.substring(2, 4)}/${formData.birthDate.substring(4)}</td>
          </tr>
          <tr>
            <th>Issue Date</th>
            <td>${formData.issueDate.substring(0, 2)}/${formData.issueDate.substring(2, 4)}/${formData.issueDate.substring(4)}</td>
          </tr>
          <tr>
            <th>Expiry Date</th>
            <td>${formData.expiryDate.substring(0, 2)}/${formData.expiryDate.substring(2, 4)}/${formData.expiryDate.substring(4)}</td>
          </tr>
        </table>
        <p class="generated-by">Generated by LicenseCodeLab</p>
      </body>
    </html>
  `;
  
  return 'data:text/html;charset=utf-8,' + encodeURIComponent(html);
}